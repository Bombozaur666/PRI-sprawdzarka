UWAGA: zadania są oznaczone następująco:
(imlp.) zadanie wymaga implementacji w symulatorze
(inż.) zadanie "inżynieryjnej" natury
(*) zadnie trudniejsze, nadające się na mini-referat


Zadanie 0.1 (inż.) "polecenie fiber"
Zbadaj w konsola2c, jak działa polecenie fiber,
będące podstawą "symulatora algorytmów rozproszonych" używanego na tych zajęciach...
użyj przykładów: events03.tcl, events03a.tcl

Zadanie 0.2 (impl.) "pierwszy test symulatora"
Spróbuj uruchomic w konsoli (konsola2c.tcl)
pierwszy z brzegu przykład z tutoriala symulatora...

Zadanie 1 (impl.) "leader election O(n^2)"
Zaimplementuj w symulatorze algorytm asynchroniczny wyboru lidera,
uzywający O(n^2) komunikatów, dla ringu zorientowanego.
Uwaga: uzyj symulatora algorytmow synchronicznych, mimo że
algorytm jest asynchroniczny! (początkowo tak będziemy postępować stale).
Wszystkie wierzchołki muszą wiedzieć czy są liderami czy nie!

Zadanie 1a (impl.) "leader election O(n^2)"
Zaimplementuj w symulatorze algorytm asynchroniczny wyboru lidera
uzywający O(n^2) komunikatów, dla ringu NIEzorientowanego.
Podobnie jak poprzednio wierz muszą wiedzieć czy są liderami czy nie.

Zadanie 2 (impl.) "C&V (8 kolorów)"
Zaimplementuj w symulatorze algorytm synchroniczny C&V
znajdujący 8-kolorowanie wierzchołkowe drzewa ukorzenionego